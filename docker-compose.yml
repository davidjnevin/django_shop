version: '3.9'


services:
  db:
    build:
      dockerfile: dockerfiles/Dockerfile
      context: .
    container_name: shop_database
    image: postgres:14.5
    env_file:
      - .env
    environment:
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: pg_isready -q --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - postgres_socket:/var/run/postgresql/
    networks:
      - nginx_default
  redis:
    container_name: shop_project_redis
    image: redis:latest
    restart: always
    healthcheck:
      test: redis-cli ping
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - nginx_default
  celery:
    build:
      dockerfile: dockerfiles/Dockerfile
      context: .
    container_name: shop_project_celery_worker
    command: worker
  shop:
    build:
      dockerfile: dockerfiles/Dockerfile
      context: .
    container_name: shop_project_django
    command: server
    stdin_open: true
    ports:
      - "8000:8000"
    tty: true
    networks:
      - nginx_default
  nginx:
    container_name: shop_nginx
    image: nginx:1.23.1
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - ./:/app
    ports:
      - "84:84"
    networks:
      - nginx_default


volumes:
  postgres_socket:

networks:
  nginx_default:
    external: true
